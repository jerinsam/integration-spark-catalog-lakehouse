# Unity Catalog Openjdk 17 image
# In production, Unity Catalog backend should be a DB like PostgreSQL or MySQL. Backend database can be configured using hibernate.properties file present at /unitycatalog/etc/config folder.
# AWS/ Azure/ GCP object store (data lake) and IAM security can also be configured, which can be done using server.properties file present at /unitycatalog/etc/config folder.
FROM python:3.11-alpine AS python-base

RUN apk add --no-cache \
    sudo \
    curl \
    vim \
    unzip \
    rsync \
    openjdk17 \
    build-base \
    openssh \
    git \ 
    make \
    g++ \
    bash \
    gcc \
    g++ \
    python3-dev \
    musl-dev \
    make \ 
    linux-headers

# Install Node
RUN apk add --update nodejs npm yarn

## Download spark and hadoop dependencies and install

# Optional env variables
ENV SPARK_HOME=${SPARK_HOME:-"/opt/spark"}
ENV HADOOP_HOME=${HADOOP_HOME:-"/opt/hadoop"}

RUN mkdir -p ${HADOOP_HOME} && mkdir -p ${SPARK_HOME}
WORKDIR ${SPARK_HOME}


RUN curl https://dlcdn.apache.org/spark/spark-3.5.4/spark-3.5.4-bin-hadoop3.tgz -o spark-3.5.4-bin-hadoop3.tgz \
 && tar xvzf spark-3.5.4-bin-hadoop3.tgz --directory /opt/spark --strip-components 1 \
 && rm -rf spark-3.5.4-bin-hadoop3.tgz


FROM python-base AS pyspark

# Install python deps
COPY ./requirements.txt .
RUN pip3 install -r requirements.txt


ENV PATH="/opt/spark/sbin:/opt/spark/bin:${PATH}"
ENV SPARK_HOME="/opt/spark"
ENV SPARK_MASTER="spark://spark-master:7077"
ENV SPARK_MASTER_HOST=spark-master
ENV SPARK_MASTER_PORT=7077

# set pyspark environmental variables like python3, jupyter as IDE and jupyter's parameters under 
# ENV PYSPARK_PYTHON=python3
# ENV PYSPARK_DRIVER_PYTHON=python3 
ENV PYSPARK_DRIVER_PYTHON=jupyter
ENV PYSPARK_DRIVER_PYTHON_OPTS='lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root'


COPY ./spark-config/spark-defaults.conf "$SPARK_HOME/conf"

RUN chmod u+x /opt/spark/sbin/* && \
    chmod u+x /opt/spark/bin/*

ENV PYTHONPATH=$SPARK_HOME/python/:$PYTHONPATH


# Define a volume
VOLUME ["/opt/spark/"]

# Create working folder 
RUN mkdir /usr/unitycatalog

# Assign work directory
WORKDIR /usr/unitycatalog

# Configure Git to use HTTP/1.1
RUN git config --global http.version HTTP/1.1

# #Clone UnityCatalog repository
RUN git clone -q https://github.com/unitycatalog/unitycatalog.git


# Add to Environment Variables 
ENV PATH="/usr/unitycatalog/unitycatalog/bin:/usr/unitycatalog/unitycatalog/ui:${PATH}"
ENV UNITYCATALOG_HOME="/usr/unitycatalog/unitycatalog"

# Update Unity Catalog server.properties to add minio details
COPY ./unity-catalog-config/server.properties "$UNITYCATALOG_HOME/etc/conf"

# Run YARN for Unity Catalog UI
WORKDIR /usr/unitycatalog/unity-catalog-dev


# Start Unity Catalog Server and UI
COPY entrypoint-unitycatalog.sh .
ENTRYPOINT ["./entrypoint-unitycatalog.sh"]


# CMD [ "tail","-f","/dev/null" ]